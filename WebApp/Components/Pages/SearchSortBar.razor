<div class="bar-content">

	<h3>Поиск и сортировка</h3>

	<div class="searchBlock">
		<div class="search-spec-name">
			<div class="blockName">
				<div class="name">Название специальности</div>
				<button @onclick="@NameSortBtnClick">@btnStr</button>
			</div>
			<br />
			<input @bind-value="@sData.Name" />
		</div>
	</div>
	<div class="searchBlock">
		<div class="educ-form">
			<div class="blockName">Форма обучения</div>
			<p>
				<input id="check" type="checkbox" name="Очная" @bind-value="@firstValue" />
				<div>Очная</div>
			</p>
			<p>
				<input id="check" type="checkbox" name="Очно-заочная" @bind-value="@secondValue" />
				<div>Очно-заочная</div>
			</p>
			<p>
				<input id="check" type="checkbox" name="Заочная" @bind-value="@thirdValue" />
				<div>Заочная</div>
			</p>
		</div>
	</div>
	@if (BarType == "")
	{
		<div class="searchBlock">
			<div class="pass-score-item">
				<div class="blockName">
					<div class="name">Проходной балл</div>
					<button @onclick="@FourthSortBtnClick">@btnChar[3]</button>
				</div>
				<div class="cost">
					<div>От: </div>
					<input inputmode="numeric" @bind-value="@sData.MinScore" />
					<div>До: </div>
					<input inputmode="numeric" @bind-value="@sData.MaxScore" />
				</div>
			</div>
		</div>
	}
	<div class="searchBlock">
		<div class="blockName">
			<div class="name">Количество бюджетных мест</div>
			<button @onclick="@FirstSortBtnClick">@btnChar[0]</button>
		</div>
		<div class="places">
			<div>От:</div>
			<input @bind-value="@sData.BudgetPlaces" />
		</div>
	</div>
	<div class="searchBlock">
		<div class="blockName">
			<div class="name">Количество мест на контракт</div>
			<button @onclick="@SecondSortBtnClick">@btnChar[1]</button>
		</div>
		<div class="places">
			<div>От:</div>
			<input @bind-value="@sData.ContractPlaces" />
		</div>
	</div>
	<div class="searchBlock">
		<div class="costItem">
			<div class="blockName">
				<div class="name">Стоимость обучения</div>
				<button @onclick="@ThirdSortBtnClick">@btnChar[2]</button>
			</div>
			<div class="cost">
				<div>От: </div>
				<input inputmode="numeric" @bind-value="@sData.MinCost" />
				<div>До: </div>
				<input inputmode="numeric" @bind-value="@sData.MaxCost" />
			</div>
		</div>

	</div>

	<div class="btnBlock">
		<button @onclick="OnBtnClick">Найти</button>
		<button @onclick="OnSortBtnClick">Отсортировать</button>
	</div>

</div>


@code {
	[Parameter]
	public string BarType { get; set; } = "";	// переменная (параметр компонента) определяющая выводимые поля поиска

	[Parameter]
	public EventCallback<SearchData> OnClickCallback { get; set; }	// параметр принимающий метод обработки события нажатия на кнопку поиска

	[Parameter]
	public EventCallback<SearchData> OnSortClickCallback { get; set; }  // параметр принимающий метод обработки события нажатия на кнопку сортировки

	Dictionary<string, bool> educForm = new Dictionary<string, bool>();	// словарь для хранения булевых значений определяющих выбрана форма обучения (ключ словаря) для поиска или нет
	Dictionary<int, int> sortSet = new Dictionary<int, int>();			// словарь для хранения булевых значений определяющих выбран ли критерий сортировки (ключ) и его тип (значение элемента словаря)

	// метод установки начальных значений кнопок сортировки
	protected override void OnInitialized()
	{
		for (int i = 0; i < 4; i++)
		{
			btnChar.Add('-');
			curChar.Add(0);
		}
	}

	SearchData sData = new SearchData();

	int currentStr = 0;

	char[] chars = new char[3] { '-', '↑', '↓' };	// текстовые значения кнопок сортировки
	string[] strings = new string[3] { " - ", "A..Я", "Я..А" };
	List<char> btnChar = new List<char>();
	List<int> curChar = new List<int>();

	string btnStr = " - ";
	string name_str = "";
	bool firstValue = false;
	bool secondValue = false;
	bool thirdValue = false;

	// Метод обработки нажатия на кнопку поиска передающий значения в метод из параметра OnClickCallback
	async Task OnBtnClick()
	{
		educForm.Clear();
		sortSet.Clear();
		educForm.Add("Очная", firstValue);
		educForm.Add("Очно-заочная", secondValue);
		educForm.Add("Заочная", thirdValue);
		sData.EducFormVals = educForm;
		sData.SortTypesSet = sortSet;
		await OnClickCallback.InvokeAsync(sData);
	}

	// Метод обработки нажатия на кнопку сортировки передающий значения в метод из параметра OnSortClickCallback
	async Task OnSortBtnClick()
	{
		educForm.Clear();
		sortSet.Clear();
		educForm.Add("Очная", firstValue);
		educForm.Add("Очно-заочная", secondValue);
		educForm.Add("Заочная", thirdValue);
		sortSet.Add(0, currentStr);
		sortSet.Add(1, curChar[0]);
		sortSet.Add(2, curChar[1]);
		sortSet.Add(3, curChar[2]);
		sortSet.Add(4, curChar[3]);
		sData.EducFormVals = educForm;
		sData.SortTypesSet = sortSet;
		await OnSortClickCallback.InvokeAsync(sData);
	}

	// Следующие четыре метода определяют значение кнопок сортировки (таким образом чтобы можно было установить только один тип сортировки)

	public void NameSortBtnClick()
	{
		if (currentStr < 2)
		{
			for (int i = 0; i < 4; i++)
			{
				curChar[i] = 0;
				btnChar[i] = '-';
			}
			currentStr += 1;
		}
		else currentStr = 0;
		btnStr = strings[currentStr];

	}

	public void FirstSortBtnClick()
	{
		if (curChar[0] < 2)
		{
			curChar[0] += 1;
			for (int i = 1; i < 4; i++)
			{
				curChar[i] = 0;
				btnChar[i] = '-';
			}
			currentStr = 0;
			btnStr = strings[currentStr];
		}
		else curChar[0] = 0;
		btnChar[0] = chars[curChar[0]];
	}

	public void SecondSortBtnClick()
	{
		if (curChar[1] < 2)
		{
			curChar[1] += 1;
			for (int i = 0; i < 4; i++)
			{
				if (i != 1)
				{
					curChar[i] = 0;
					btnChar[i] = '-';
				}
			}
			currentStr = 0;
			btnStr = strings[currentStr];
		}
		else curChar[1] = 0;
		btnChar[1] = chars[curChar[1]];
	}

	public void ThirdSortBtnClick()
	{
		if (curChar[2] < 2)
		{
			curChar[2] += 1;
			for (int i = 0; i < 4; i++)
			{
				if (i != 2)
				{
					curChar[i] = 0;
					btnChar[i] = '-';
				}
			}
			currentStr = 0;
			btnStr = strings[currentStr];
		}
		else curChar[2] = 0;
		btnChar[2] = chars[curChar[2]];
	}

	public void FourthSortBtnClick()
	{
		if (curChar[3] < 2)
		{
			curChar[3] += 1;
			for (int i = 0; i < 3; i++)
			{
				curChar[i] = 0;
				btnChar[i] = '-';
			}
			currentStr = 0;
			btnStr = strings[currentStr];
		}
		else curChar[3] = 0;
		btnChar[3] = chars[curChar[3]];
	}
}
